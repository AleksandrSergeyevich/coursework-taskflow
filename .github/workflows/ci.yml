name: CI Pipeline for TaskFlow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Docker Buildx (–¥–ª—è —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–æ–≤ –≤ GitHub Actions)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # 3. –°–æ–±–∏—Ä–∞–µ–º –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –±—ç–∫–µ–Ω–¥ –æ—Ç–¥–µ–ª—å–Ω–æ
    - name: Build and test backend
      run: |
        echo "üì¶ Building backend image..."
        cd backend
        docker build -t taskflow-backend .

        echo "üöÄ Starting backend container..."
        docker run -d --name test-backend -p 5000:5000 taskflow-backend

        echo "‚è≥ Waiting 40 seconds for Flask to initialize and connect to DB..."
        sleep 40

        echo "‚úÖ Checking /health endpoint..."
        if curl -f http://localhost:5000/health; then
          echo "üíö Backend is healthy!"
        else
          echo "‚ùå Backend health check FAILED"
          docker logs test-backend  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ Flask –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
          exit 1
        fi

        echo "üõë Stopping backend container..."
        docker stop test-backend
        docker rm test-backend

    # 4. –°–æ–±–∏—Ä–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    - name: Build frontend
      run: |
        echo "üì¶ Building frontend image..."
        cd frontend
        docker build -t taskflow-frontend .
        echo "‚úÖ Frontend image built successfully"

    # 5. –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å—é —Å–∏—Å—Ç–µ–º—É —á–µ—Ä–µ–∑ Docker Compose –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º
    - name: Run full system with Docker Compose
      run: |
        echo "üê≥ Starting full system with Docker Compose..."
        docker compose up -d

        echo "‚è≥ Waiting 50 seconds for all services to initialize..."
        sleep 50

        echo "‚úÖ Checking backend health (/health)..."
        if curl -f http://localhost:5000/health; then
          echo "üíö Backend is responding"
        else
          echo "‚ùå Backend is NOT responding"
          docker compose logs backend  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –±—ç–∫–µ–Ω–¥–∞
          exit 1
        fi

        echo "‚úÖ Checking frontend availability..."
        if curl -f http://localhost:8080; then
          echo "üíö Frontend is responding"
        else
          echo "‚ùå Frontend is NOT responding"
          docker compose logs frontend
          exit 1
        fi

        echo "‚úÖ FULL SYSTEM IS RUNNING SUCCESSFULLY!"
        echo "üõë Stopping all containers..."
        docker compose down
